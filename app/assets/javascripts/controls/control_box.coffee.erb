
window.ControlBox = can.Control({

  init: (el, opt) ->
    @opt = opt
    @element.find('#new_'+@opt.sg).find('textarea,input[title]').inputHints()
    @content = @element.find('#'+@opt.pl)
    @model = window[@opt.sg.model()].models JSON.parse(@content.text())
    @content.html(
      can.view( @opt.pl+'_EJS', { items: @model } )
    )
    @content.paginate()
    @content.show()
    @element.find('.colour option[value='+@element.attr('class').split(' ')[1]+']').attr('selected', 'selected')
    return

  ".edit click": (el, ev) ->
    klass = el.parents('div').attr('class')
    i = klass.replace(@opt.sg+'_','')
    @element.find('.' + klass + ' p').html(
      can.view( @opt.sg+'_edit_EJS', { item: @model[i], i: i } )
    )
    el.attr('class', 'save').text('Save')
    el.parents('div').find('form').attr('id', 'edit_'+klass)


  ".save click":(el, ev) ->
    klass = el.parents('div').attr('class')
    form =  el.parents('div').find('#edit_'+klass)
    values = form.formParams()
    i = klass.replace(@opt.sg+'_','')
    @model[i].attr(values[@opt.sg])
    window[@opt.sg.model()].update(values, @model[i])
    @content.html(can.view( @opt.pl+'_EJS', { items: @model } ))


  ".delete click": (el, ev) ->
    i = el.parents('div').attr('class').replace(@opt.sg+'_','')
    @model[i].destroy()
    @model.splice(i, 1)
    @content.html(can.view( @opt.pl+'_EJS', { items: @model } ))

  ".new submit": (el, ev) ->
    ev.preventDefault()
    el.find('.hint').removeClass('hint').val('')
    values = el.formParams()
    item = new window[@opt.sg.model()]( values[@opt.sg] )
    if item.errors()
      item.alert()
    else
      window[@opt.sg.model()].create(values, item)
      @model.unshift(item)
      @content.html(can.view( @opt.pl+'_EJS', { items: @model } ))

  ".btn-ebox click": (el, ev) ->
    if el.hasClass('show')
      @element.find('.ebox').show('fast')
    else
      @element.find('.ebox').hide('fast')
    el.toggleClass('show')

  ".ebox .colour change": (el, ev) ->
    @element.attr('class', '').addClass('box '+el.val())
    url = '<%= Rails.application.routes.url_helpers.save_colours_path %>'

    $.post(url, {column: @element.attr('id'), colour: el.val()}, null, "json")

})

